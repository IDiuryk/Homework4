0.'number' + 3 + 3 результат: "number33". У нас є строка 'number' та число '3', оператор '+' перетворює число на рядок і виконує конкатенацію 
і як результат 'number' + 3 стає 'number3'
Далі 'number3' + 3. Знову ж таки, оператор + перетворює число на рядок і виконує конкатенацію і як результат'number3' + 3 стає 'number33

1. null + 3 результат: число "3". Null це відсутність значення. Оператор '+' виконує додавання чисел,
в даному випадку 'null' перетворюється до числа '0' 
тоді додається: '0 + 3' що дає результат '3'.

2. 5 && "qwerty" результат: "qwerty".  Перше значення '5' є числом - true, друге значення "qwerty" також true, 
Оператор && поверне другий операнд, якщо обидва true.

3. +'40' + +'2' + "hillel"; результат: "42hillel". Унарний плюс перед рядком перетворює рядок у число, тому в даному випадку 
унарний плюс перетворить '40' на те ж число '40' 
+'2' також перетворить на число '2'. Після перетворення у числа виконується додавання '40 + 2 // 42'.
Далі виконується конкатенація з рядком 'hillel' і тоді результат буде "42hillel"

4. '10' - 5 === 6; результат "false". Операція мінус після рядка '10' перетворює рядок на число, далі виконується операція '10 - 5 // 5'. 
Далі виконується операція строге порівняння 5 === 6, тому результат буде 'false'.

5. true + false  результат: число "1". 'True' and 'False' перетворюються у числа для арифметичних операцій, 'true' перетворюється на число '1' 
та 'false' перетворюється на число '0' тому виконується додавання чисел '1 + 0 //1'.

6. '4px' - 3  результат "NaN". У нас строка '4px' і число "3", оператор "-" виконує віднімання та не може 'px' перетворити на число,
тому результат буде 'NaN'.

7. '4' - 3 результат "1". Оператор '-' перетворює строку '4' у число "4", далі відбувається віднмання "4 - 3 // 1"

8. 12 / '6' результат "2". Оператор ділення перетворює строку '6' у число "6" далі відбувається ділення 12 / 6.

9. '10' + (5 === 6); результат "10false". Спочатку вібдувається строге порівння 5 === 6 // false. Якщо є хоча б один рядок тоді оператор "+"
виконує конкатенацію. 
Конкатенація рядка '10' та рядка 'false' '10' + false // '10false'.

10. null == '' результат "false". "null" прирівнюється до "undefined" та пустий рядок прирівнюється до 0. Виконується нестроге порівняння
"null == '' // false".

11. 3 ** (9 / 3); результат "27". Спочатку відбувається ділення "9 / 3 //3", далі вібдувається піднесення числа 3 до степеня 3, "3 ** 3".

12. !!'false' == !!'true' результат "true". Оператор ! перетворює на булеве значення, та оператор !! виконує подвійне заперечення,
так як строка 'false' не є пустою то значення буде прирівнюватись до "true". true == true // true.

13. 0 || '0' && 1 результат "1". Спочатку виконується операція "&&", а потім "||". 
Оператор "&&" повертає перший "false".
'0' - є непорожнім рядком, значить буде вважатись "true". '0' && 1 // 1
Оператор "||" повертає перший операнд "true". Оскільки 0 є "false", вираз повертає другий операнд "1".

14. (+null == false) < 1; результат "false". Оператор + перед null перетворює його на число, далі виконується порівняння 0 == false, 
false приводиться до нуля, тому порівння 0 == 0 // true.
true приводиться до 1, тому порівняння 1 < 1 повертає false, тому що 1 не менше 1.

15. false && true || true результат "true". Спочатку виконується операція "&&", а потім "||".
"false && true // false". Оператор || повертає перший операнд на true, тому "false || true // true".

16. false && (false || true);  результат "false". Спочатку виконується операція та що у дужках, 
Оператор || повертає перший операнд на true, тому "false || true // true"
Оператор && повертає перший операнд false, тому результат буде "false && true // false".

17. (+null == false) < 1 ** 5; результат "false". Оператор + перед null перетворює його на число "0", якщо перед булевим значенням порівняння
то булеве число приводиться до числа false до 0, тому порівняння "0 == 0 // true"
Далі буде обчислення 1 ** 5, де 1 піднесена до п'ятої степені тому результат буде 1
І останнє порівння "1 < 1 // false" тому що 1 не менше 1.















